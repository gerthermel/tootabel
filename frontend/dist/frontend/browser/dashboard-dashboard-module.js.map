{"version":3,"sources":["./node_modules/ngx-autosize/__ivy_ngcc__/fesm2015/ngx-autosize.js","./src/app/dashboard/company/company.component.ts","./src/app/dashboard/company/company.component.html","./src/app/dashboard/dashboard-routing.module.ts","./src/app/dashboard/dashboard.module.ts","./src/app/dashboard/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard/dashboard.component.html","./src/app/dashboard/home/home.component.ts","./src/app/dashboard/home/home.component.html","./src/app/dashboard/left-menu/left-menu.component.ts","./src/app/dashboard/left-menu/left-menu.component.html","./src/app/dashboard/left-menu/my-companies/my-companies.component.ts","./src/app/dashboard/left-menu/my-companies/my-companies.component.html","./src/app/shared/guards/auth.guard.ts","./src/app/shared/guards/menu-resolver.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmJ;;AAEnJ;AACA;AACA,cAAc,wGAAwG;AACtH;AACwC;AACxC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gDAAgD,+BAA+B;AAC/E,kBAAkB,gEAAyB,EAAE,gEAAgE;AAC7G,+CAA+C,wEAAkB,EAAE,wCAAwC,wBAAwB,EAAE,wCAAwC;AAC7K,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AA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","file":"dashboard-dashboard-module.js","sourcesContent":["import { Injectable, ɵɵdefineInjectable, EventEmitter, Directive, ElementRef, NgZone, Input, Output, HostListener, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass WindowRef {\n    /**\n     * @return {?}\n     */\n    get nativeWindow() {\n        return window;\n    }\n}\nWindowRef.ɵfac = function WindowRef_Factory(t) { return new (t || WindowRef)(); };\nWindowRef.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: WindowRef, factory: WindowRef.ɵfac, providedIn: 'root' });\n/** @nocollapse */ WindowRef.ngInjectableDef = ɵɵdefineInjectable({ factory: function WindowRef_Factory() { return new WindowRef(); }, token: WindowRef, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(WindowRef, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAX_LOOKUP_RETRIES = 3;\nclass AutosizeDirective {\n    /**\n     * @param {?} element\n     * @param {?} _window\n     * @param {?} _zone\n     */\n    constructor(element, _window, _zone) {\n        this.element = element;\n        this._window = _window;\n        this._zone = _zone;\n        this.onlyGrow = false;\n        this.useImportant = false;\n        this.resized = new EventEmitter();\n        this.retries = 0;\n        this._destroyed = false;\n        if (this.element.nativeElement.tagName !== 'TEXTAREA') {\n            this._findNestedTextArea();\n        }\n        else {\n            this.textAreaEl = this.element.nativeElement;\n            this.textAreaEl.style.overflow = 'hidden';\n            this._onTextAreaFound();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minRows(value) {\n        this._minRows = value;\n        if (this.textAreaEl) {\n            this.textAreaEl.rows = value;\n        }\n    }\n    ;\n    /**\n     * @param {?} textArea\n     * @return {?}\n     */\n    onInput(textArea) {\n        this.adjust();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed = true;\n        if (this._windowResizeHandler) {\n            this._window.nativeWindow.removeEventListener('resize', this._windowResizeHandler, false);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this.adjust();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this.adjust(true);\n    }\n    /**\n     * @return {?}\n     */\n    _findNestedTextArea() {\n        this.textAreaEl = this.element.nativeElement.querySelector('TEXTAREA');\n        if (!this.textAreaEl && this.element.nativeElement.shadowRoot) {\n            this.textAreaEl = this.element.nativeElement.shadowRoot.querySelector('TEXTAREA');\n        }\n        if (!this.textAreaEl) {\n            if (this.retries >= MAX_LOOKUP_RETRIES) {\n                console.warn('ngx-autosize: textarea not found');\n            }\n            else {\n                this.retries++;\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._findNestedTextArea();\n                }), 100);\n            }\n            return;\n        }\n        this.textAreaEl.style.overflow = 'hidden';\n        this._onTextAreaFound();\n    }\n    /**\n     * @return {?}\n     */\n    _onTextAreaFound() {\n        this._addWindowResizeHandler();\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.adjust();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    _addWindowResizeHandler() {\n        this._windowResizeHandler = Debounce((/**\n         * @return {?}\n         */\n        () => {\n            this._zone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.adjust();\n            }));\n        }), 200);\n        this._zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._window.nativeWindow.addEventListener('resize', this._windowResizeHandler, false);\n        }));\n    }\n    /**\n     * @param {?=} inputsChanged\n     * @return {?}\n     */\n    adjust(inputsChanged = false) {\n        if (!this._destroyed && this.textAreaEl && this.textAreaEl.parentNode) {\n            /** @type {?} */\n            const currentText = this.textAreaEl.value;\n            if (inputsChanged === false &&\n                currentText === this._oldContent &&\n                this.textAreaEl.offsetWidth === this._oldWidth) {\n                return;\n            }\n            this._oldContent = currentText;\n            this._oldWidth = this.textAreaEl.offsetWidth;\n            /** @type {?} */\n            const clone = this.textAreaEl.cloneNode(true);\n            /** @type {?} */\n            const parent = this.textAreaEl.parentNode;\n            clone.style.width = this.textAreaEl.offsetWidth + 'px';\n            clone.style.visibility = 'hidden';\n            clone.style.position = 'absolute';\n            clone.textContent = currentText;\n            parent.appendChild(clone);\n            clone.style.overflow = 'hidden';\n            clone.style.height = 'auto';\n            /** @type {?} */\n            let height = clone.scrollHeight;\n            // add into height top and bottom borders' width\n            /** @type {?} */\n            let computedStyle = this._window.nativeWindow.getComputedStyle(clone, null);\n            height += parseInt(computedStyle.getPropertyValue('border-top-width'));\n            height += parseInt(computedStyle.getPropertyValue('border-bottom-width'));\n            // add into height top and bottom paddings width\n            height += parseInt(computedStyle.getPropertyValue('padding-top'));\n            height += parseInt(computedStyle.getPropertyValue('padding-bottom'));\n            /** @type {?} */\n            const oldHeight = this.textAreaEl.offsetHeight;\n            /** @type {?} */\n            const willGrow = height > oldHeight;\n            if (this.onlyGrow === false || willGrow) {\n                /** @type {?} */\n                const lineHeight = this._getLineHeight();\n                /** @type {?} */\n                const rowsCount = height / lineHeight;\n                if (this._minRows && this._minRows >= rowsCount) {\n                    height = this._minRows * lineHeight;\n                }\n                else if (this.maxRows && this.maxRows <= rowsCount) {\n                    // never shrink the textarea if onlyGrow is true\n                    /** @type {?} */\n                    const maxHeight = this.maxRows * lineHeight;\n                    height = this.onlyGrow ? Math.max(maxHeight, oldHeight) : maxHeight;\n                    this.textAreaEl.style.overflow = 'auto';\n                }\n                else {\n                    this.textAreaEl.style.overflow = 'hidden';\n                }\n                /** @type {?} */\n                const heightStyle = height + 'px';\n                /** @type {?} */\n                const important = this.useImportant ? 'important' : '';\n                this.textAreaEl.style.setProperty('height', heightStyle, important);\n                this.resized.emit(height);\n            }\n            parent.removeChild(clone);\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getLineHeight() {\n        /** @type {?} */\n        let lineHeight = parseInt(this.textAreaEl.style.lineHeight, 10);\n        if (isNaN(lineHeight) && this._window.nativeWindow.getComputedStyle) {\n            /** @type {?} */\n            const styles = this._window.nativeWindow.getComputedStyle(this.textAreaEl);\n            lineHeight = parseInt(styles.lineHeight, 10);\n        }\n        if (isNaN(lineHeight)) {\n            /** @type {?} */\n            const fontSize = this._window.nativeWindow.getComputedStyle(this.textAreaEl, null).getPropertyValue('font-size');\n            lineHeight = Math.floor(parseInt(fontSize.replace('px', ''), 10) * 1.5);\n        }\n        return lineHeight;\n    }\n}\nAutosizeDirective.ɵfac = function AutosizeDirective_Factory(t) { return new (t || AutosizeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(WindowRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nAutosizeDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AutosizeDirective, selectors: [[\"\", \"autosize\", \"\"]], hostBindings: function AutosizeDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function AutosizeDirective_input_HostBindingHandler($event) { return ctx.onInput($event.target); });\n    } }, inputs: { onlyGrow: \"onlyGrow\", useImportant: \"useImportant\", minRows: \"minRows\", maxRows: \"maxRows\" }, outputs: { resized: \"resized\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nAutosizeDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: WindowRef },\n    { type: NgZone }\n];\nAutosizeDirective.propDecorators = {\n    minRows: [{ type: Input }],\n    maxRows: [{ type: Input }],\n    onlyGrow: [{ type: Input }],\n    useImportant: [{ type: Input }],\n    resized: [{ type: Output }],\n    onInput: [{ type: HostListener, args: ['input', ['$event.target'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutosizeDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[autosize]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: WindowRef }, { type: ɵngcc0.NgZone }]; }, { onlyGrow: [{\n            type: Input\n        }], useImportant: [{\n            type: Input\n        }], resized: [{\n            type: Output\n        }], minRows: [{\n            type: Input\n        }], \n    /**\n     * @param {?} textArea\n     * @return {?}\n     */\n    onInput: [{\n            type: HostListener,\n            args: ['input', ['$event.target']]\n        }], maxRows: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype._minRows;\n    /** @type {?} */\n    AutosizeDirective.prototype.maxRows;\n    /** @type {?} */\n    AutosizeDirective.prototype.onlyGrow;\n    /** @type {?} */\n    AutosizeDirective.prototype.useImportant;\n    /** @type {?} */\n    AutosizeDirective.prototype.resized;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype.retries;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype.textAreaEl;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype._oldContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype._oldWidth;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype._windowResizeHandler;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype._destroyed;\n    /** @type {?} */\n    AutosizeDirective.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype._window;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype._zone;\n    /* Skipping unhandled member: ;*/\n}\n/**\n * @param {?} func\n * @param {?} wait\n * @param {?=} immediate\n * @return {?}\n */\nfunction Debounce(func, wait, immediate = false) {\n    /** @type {?} */\n    let timeout;\n    return (/**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        const context = this;\n        /** @type {?} */\n        const args = arguments;\n        /** @type {?} */\n        const later = (/**\n         * @return {?}\n         */\n        function () {\n            timeout = null;\n            if (!immediate) {\n                func.apply(context, args);\n            }\n        });\n        /** @type {?} */\n        const callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) {\n            func.apply(context, args);\n        }\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AutosizeModule {\n}\nAutosizeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AutosizeModule });\nAutosizeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AutosizeModule_Factory(t) { return new (t || AutosizeModule)(); }, providers: [\n        WindowRef\n    ], imports: [[]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AutosizeModule, { declarations: [AutosizeDirective], exports: [AutosizeDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutosizeModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [AutosizeDirective],\n                imports: [],\n                providers: [\n                    WindowRef\n                ],\n                exports: [AutosizeDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AutosizeDirective, AutosizeModule, WindowRef as ɵa };\n\n//# sourceMappingURL=ngx-autosize.js.map","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, Injectable, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/shared/services/app.service';\r\nimport { TableService } from 'src/app/shared/services/table.service';\r\nimport { state, trigger, style, transition, animate } from '@angular/animations';\r\nimport { CompanyService } from 'src/app/shared/services/company.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgbDropdownConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { environment } from '../../../environments/environment';\r\nimport { CoreEnvironment } from '@angular/compiler/src/compiler_facade_interface';\r\n\r\n@Component({\r\n  selector: 'app-company',\r\n  templateUrl: './company.component.html',\r\n  styleUrls: ['./company.component.scss'],\r\n  providers: [NgbDropdownConfig]\r\n})\r\n@Injectable({\r\n  providedIn: 'root' // just before your class\r\n})\r\nexport class CompanyComponent implements OnInit, AfterViewInit {\r\n  private routeSub;\r\n  public quickAdd = environment.quickAdd;\r\n  public quickEdit = environment.quickEdit;\r\n\r\n  objectKeys = Object.keys;\r\n  constructor(\r\n    public service:AppService,\r\n    public table:TableService,\r\n    public company:CompanyService,\r\n    private route: ActivatedRoute,\r\n    public cdr:ChangeDetectorRef,\r\n    config: NgbDropdownConfig\r\n  ) { \r\n    config.placement = 'top-left';\r\n    config.autoClose = true;\r\n  }\r\n\r\n\r\n  \r\n  ngAfterViewInit(){\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe((response: any) => {\r\n      var data = response.resolver[0];\r\n\r\n      setTimeout(() => {\r\n        this.table.generateYears();\r\n        this.table.generateMonths();\r\n        this.table.generateDays();\r\n        setTimeout(() => {\r\n          let el = document.getElementById('today');\r\n        })\r\n\r\n      })\r\n    })\r\n\r\n    this.routeSub = this.route.params.subscribe(params => {\r\n      this.service.selectedCompany = params['id']\r\n      this.table.getData();\r\n\r\n    });\r\n  }\r\n  convertMonth(number){\r\n    return parseInt(number);\r\n  }\r\n  public filterMonthChange(month){\r\n    this.table.isTableLoading = true;\r\n    this.table.filterSelectedMonth = month;\r\n    this.table.getData();\r\n  }\r\n\r\n  public filterYearChange(year){\r\n    this.table.filterSelectedYear = year;\r\n    this.table.getData();\r\n  }\r\n\r\n  \r\n  public returnZero() {\r\n    return 0\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.routeSub.unsubscribe();\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AuthGuard } from '../shared/guards/auth.guard';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { CompanyComponent } from './company/company.component';\r\nimport { CompanyResolver } from '../shared/guards/company-resolver.service';\r\nimport { MenuResolver } from '../shared/guards/menu-resolver.service';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component:DashboardComponent,\r\n    children: [\r\n      { \r\n        path: 'sisene', \r\n        component: LoginComponent \r\n      },\r\n      {\r\n        path: 'firma/:id',\r\n        loadChildren: () => import('./company/company.module').then(m => m.CompanyModule) \r\n      },\r\n      {\r\n        path: '',\r\n        component: HomeComponent,\r\n        canActivate: [AuthGuard],\r\n        resolve: {\r\n          resolver: MenuResolver\r\n        },\r\n      },    \r\n  ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { SharedModule } from '../shared/modules/shared.module';\r\nimport { MyCompaniesComponent } from './left-menu/my-companies/my-companies.component';\r\nimport { LeftMenuComponent } from './left-menu/left-menu.component';\r\nimport { CompanyComponent } from './company/company.component';\r\nimport { AutosizeModule } from 'ngx-autosize';\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HomeComponent, \r\n    LoginComponent, \r\n    DashboardComponent, \r\n    MyCompaniesComponent, \r\n    LeftMenuComponent, \r\n    CompanyComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    SharedModule,\r\n    AutosizeModule,\r\n\t\tBrowserTransferStateModule,\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","import { AfterViewInit, ChangeDetectorRef, Component, Inject, OnInit, PLATFORM_ID } from '@angular/core';\nimport { AppService } from 'src/app/shared/services/app.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { AlertService } from 'src/app/shared/services/alert.service';\nimport { CompanyService } from 'src/app/shared/services/company.service';\nimport { state, trigger, style, transition, animate } from '@angular/animations';\nimport {IMyDpOptions, IMyDateModel} from 'mydatepicker';\nimport { TableService } from 'src/app/shared/services/table.service';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  animations: [\n\ttrigger('backDrop', [\n\t\tstate('hide', style({\n\t\t\t\t'display':'none',\n\t\t\t\t'opacity':'0',\n\t\t\t})),\n\t\tstate('show', \n\t\t\tstyle({\n\t\t\t\t'display':'block',\n\t\t\t\t'opacity':'0.7',\n\t\t\t})),\n\t\ttransition('hide => show', animate(150)),\n\t\ttransition('show => hide', animate(150))\n\t]),\n\ttrigger('slideLeft', [\n\t\tstate('hide', style({\n\t\t\t\t'left': '-83px',\n\t\t\t})),\n\t\tstate('show', \n\t\t\tstyle({\n\t\t\t\t'left': '317px',\n\t\t\t})),\n\t\ttransition('show => hide', animate(150)),\n\t\ttransition('hide => show', animate(150))\n\t]),\n\ttrigger('slideMain', [\n\t\tstate('hide', style({\n\t\t\t\t'left': '-100vw',\n\t\t\t})),\n\t\tstate('show', \n\t\t\tstyle({\n\t\t\t\t'left': '0vw',\n\t\t\t})),\n\t\ttransition('show => hide', animate(150)),\n\t\ttransition('hide => show', animate(150))\n\t]),\n\ttrigger('slideRight', [\n\t\tstate('hide', style({\n\t\t\t\t'right': '-400px',\n\t\t\t})),\n\t\tstate('show', \n\t\t\tstyle({\n\t\t\t\t'right': '0px',\n\t\t\t})),\n\t\ttransition('show => hide', animate(150)),\n\t\ttransition('hide => show', animate(150))\n\t]),\n\ttrigger('slideCompany', [\n\t\tstate('hide', style({\n\t\t\t\t'right': '-100vw',\n\t\t\t})),\n\t\tstate('show', \n\t\t\tstyle({\n\t\t\t\t'right': '0px',\n\t\t\t})),\n\t\ttransition('show => hide', animate(150)),\n\t\ttransition('hide => show', animate(150))\n\t]),\n\ttrigger('slideUp', [\n\t\tstate('hide', style({\n\t\t\t\t'bottom': '-100vh',\n\t\t\t})),\n\t\tstate('show', \n\t\t\tstyle({\n\t\t\t\t'bottom': '0px',\n\t\t\t})),\n\t\ttransition('show => hide', animate(150)),\n\t\ttransition('hide => show', animate(150))\n\t]),\n  ]\n})\n\nexport class DashboardComponent implements OnInit, AfterViewInit {\n\tpublic isBrowser;\n  constructor(\n\tpublic auth:AuthService,\n\tpublic service:AppService,\n    public company:CompanyService,\n\tpublic table:TableService,\n\tprivate cd: ChangeDetectorRef,\n\t@Inject(PLATFORM_ID) public platformId: Object,\n  ) { \n\tthis.isBrowser = isPlatformBrowser(platformId)\n  }\n\n  ngOnInit(): void {\n  }\n\n  public returnZero() {\n\treturn 0\n\t}\n\n    ngAfterViewInit(): void {\n    }\n}\n","<div *ngIf=\"this.isBrowser\" style=\"height:100%\">\r\n  <ng-template [ngIf]=\"this.auth.isAuthenticated\" [ngIfElse]=\"isNotAuth\">\r\n    <div class=\"container-fluid\" style=\"height:100%\">\r\n      <div class=\"row\" style=\"height:100%\">\r\n        <div class=\"col-lg-2 menu p-0\">\r\n          <app-left-menu></app-left-menu>\r\n        </div>\r\n        <div class=\"col-lg-10 body d-flex\">\r\n          <div class=\"top\">\r\n            <div class=\"row\">\r\n              <div class=\"col-2 d-lg-none text-center align-self-center\">\r\n                <fa-icon [icon]=\"['fas','bars']\" (click)='this.company.openSidebar(\"mainMenu\")'></fa-icon>\r\n              </div>\r\n              <div class=\"col col-lg-10 text-center align-self-center\">\r\n                <h2 class=\"d-lg-none\">\r\n                  {{ this.table.months[this.table.selectedMonth] }} \r\n                </h2>\r\n              </div>\r\n              <div class=\"col-2 col-lg-2 text-center align-self-center\">\r\n                <div class=\"d-flex  justify-content-end pr-3\">\r\n                    <div class=\"flex mr-lg-3 \" (click)=\"this.auth.signOut()\" style=\"cursor:pointer\">\r\n                      <fa-icon [icon]=\"['fas', 'user']\" ></fa-icon>\r\n                    </div>\r\n                    <!-- \r\n\r\n                      <div class=\"flex lg-mr-3 d-none d-md-block d-lg-block\">\r\n                        <a>Kasutaja</a>\r\n                      </div>\r\n                    -->\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"bottom\">\r\n            <router-outlet></router-outlet>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"mainMenuMobile d-lg-none\" [@slideMain]=\"this.company.slidePanel.mainMenu\">  \r\n      <div class=\"menuWrap\">\r\n        <div class=\"top p-3\">\r\n          <div class=\"row\">\r\n            <div class=\"col-10 align-self-center\">\r\n              <h2>Tunnilehed</h2>\r\n            </div>\r\n            <div class=\"col-2 align-self-center text-end\">\r\n              <h2>\r\n                <fa-icon [icon]=\"['fas','times']\" (click)=\"this.company.closeSidebar()\"></fa-icon>\r\n              </h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"middle\">\r\n          <div class=\"companies d-flex\">\r\n            <ng-template [ngIf]=\"this.company.myCompaniesLoading\" [ngIfElse]=\"menuContent\">\r\n              <fa-icon [icon]=\"['fas', 'circle-notch']\" [spin]=\"true\" class=\"align-self-center text-center w-100\"></fa-icon>\r\n            </ng-template>\r\n            <ng-template #menuContent>\r\n              <ul>\r\n                <li *ngFor=\"let item of this.company.myCompanies; let i=index\" routerLink=\"/firma/{{item.id}}\" (click)=\"this.company.closeSidebar()\">{{item.name}}</li>\r\n              </ul>\r\n            </ng-template>\r\n          </div>\r\n        </div>\r\n        <div class=\"bottom p-3\">\r\n          <button class=\"newCompany align-self-center\" (click)='this.company.openSidebar(\"newCompanyModal\",true)'>\r\n            <fa-icon [icon]=\"['far', 'plus-square']\" class=\"mr-2\" ></fa-icon>\r\n            Lisa Firma\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"mainMenuMobile d-lg-none\" [@slideRight]=\"this.company.slidePanel.userMenu\">  \r\n      <div class=\"menuWrap\">\r\n        <div class=\"top p-3\">\r\n          <div class=\"row\">\r\n            <div class=\"col-10 align-self-center\">\r\n              <h2>Tunnilehed</h2>\r\n            </div>\r\n            <div class=\"col-2 align-self-center text-end\">\r\n              <h2>\r\n                <fa-icon [icon]=\"['fas','times']\" (click)=\"this.company.closeSidebar()\"></fa-icon>\r\n              </h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"middle\">\r\n          1\r\n        </div>\r\n        <div class=\"bottom p-3\">\r\n          asd\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div  [@slideRight]=\"this.company.slidePanel.newEntry\" class=\"addEntryModal\">\r\n      <div class=\"wrap p-4\">\r\n        <div class=\"align-self-center\">\r\n          <div class=\"row\">\r\n            <div class=\"col-10 align-self-center\">\r\n              <h4>Uus Sissekanne</h4>\r\n            </div>\r\n            <div class=\"col-2 align-self-center text-end\">\r\n              <h4>\r\n                <fa-icon [icon]=\"['fas','times']\" (click)=\"this.company.closeSidebar()\"></fa-icon>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <form>\r\n            <form  #d=\"ngForm\">\r\n              <div class=\"form-group\">\r\n                <small for=\"name\">Kuupäev</small>\r\n                <div class=\"row g-3\">\r\n                  <div class=\"col-3 pr-1\">\r\n                    <select class=\"form-control pl-1 pr-1\" name=\"selectedDay\" [ngModel]=\"selectedDay\" (ngModelChange)=\"this.table.dayChange($event)\">\r\n                      <option \r\n                        *ngFor=\"let item of this.table.daysArray; let i=index\"  \r\n                        [attr.selected]=\"item == this.table.selectedDay && this.table.selectedMonth == this.table.currentMonth && this.table.selectedYear == this.table.currentYear?true:null\"\r\n                      >\r\n                        {{item}}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"col-5 pl-1 pr-1\">\r\n                    <select class=\"form-control pl-1 pr-1\" name=\"selectedMonth\" [ngModel]=\"selectedMonth\" (ngModelChange)=\"this.table.monthChange($event)\">\r\n                      <option \r\n                        [attr.value]=\"item\"\r\n                        *ngFor=\"let item of this.table.monthArray; let i=index\"\r\n                        [attr.selected]=\"item == this.table.selectedMonth?true:null\"\r\n                      >\r\n                        {{ this.table.months[ item ] }}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"col-4 pl-1\">\r\n                    <select class=\"form-control pl-1 pr-1\" aria-label=\"\">\r\n                      <option \r\n                      [(ngModel)]=\"year\"\r\n                      ngDefaultControl\r\n                      #name=\"ngModel\" \r\n                      name=\"year\"\r\n                      *ngFor=\"let item of this.table.years\"  value=\"{{item}}\" [attr.selected]=\"item == this.table.selectedYear?true:null\">{{item}}</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <small for=\"name\">Töömaa</small>\r\n                <input         \r\n                  ngModel\r\n                  #name=\"ngModel\" \r\n                  name=\"object\"\r\n                  type=\"text\" \r\n                  class=\"form-control\"  \r\n                  placeholder=\"\" \r\n                  ngbAutofocus \r\n                  required\r\n                >\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <small for=\"name\">Ülesanded/Märkused</small>\r\n                <textarea         \r\n                  ngModel\r\n                  #name=\"ngModel\" \r\n                  name=\"notes\"\r\n                  type=\"text\" \r\n                  class=\"form-control\"  \r\n                  placeholder=\"\" \r\n                  ngbAutofocus \r\n                  required\r\n                ></textarea>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <small for=\"name\">Tunnid</small>\r\n                <input         \r\n                  ngModel\r\n                  #name=\"ngModel\" \r\n                  name=\"hours\"\r\n                  type=\"text\" \r\n                  class=\"form-control\"  \r\n                  placeholder=\"\" \r\n                  ngbAutofocus \r\n                  required\r\n                >\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary btn-block\" (click)=\"this.table.createNewEntry(d)\" >Lisa Tunnid</button><br>\r\n            </form>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div  [@slideUp]=\"this.company.slidePanel.newFilter\" class=\"newFilter d-lg-none\">\r\n      <div class=\"row\">\r\n        <div class=\"col-10 align-self-center\">\r\n          <h4>Info</h4>\r\n        </div>\r\n        <div class=\"col-2 align-self-center text-end\">\r\n          <h4>\r\n            <fa-icon [icon]=\"['fas','times']\" (click)=\"this.company.closeSidebar()\"></fa-icon>\r\n          </h4>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div *ngFor=\"let item of this.table.hours.week | keyvalue\" > \r\n\r\n          <span placement=\"right\" ngbTooltip=\"{{ item.value['startDate'] | date : 'd. MMM' }} -  {{ item.value['endDate'] | date : 'd. MMM' }}\" >\r\n            <fa-icon [icon]=\"['fas','chevron-right']\" *ngIf=\"item.value['currentWeek']\"></fa-icon> Nädal {{item.key}}: {{ item.value['hours'] }}\r\n          </span>\r\n        </div>\r\n        <b>Tunde kokku: {{ this.table.totalHours }}</b>\r\n      </div>\r\n    </div>\r\n\r\n    <div  [@slideRight]=\"this.company.slidePanel.overviewMenu\" class=\"overviewMenu\">\r\n      <div class=\"row\">\r\n        <div class=\"col-10 align-self-center\">\r\n          <h4>Info</h4>\r\n        </div>\r\n        <div class=\"col-2 align-self-center text-end\">\r\n          <h4>\r\n            <fa-icon [icon]=\"['fas','times']\" (click)=\"this.company.closeSidebar()\"></fa-icon>\r\n          </h4>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div *ngFor=\"let item of this.table.hours.week | keyvalue\" > \r\n\r\n          <span placement=\"right\" ngbTooltip=\"{{ item.value['startDate'] | date : 'd. MMM' }} -  {{ item.value['endDate'] | date : 'd. MMM' }}\" >\r\n            <fa-icon [icon]=\"['fas','chevron-right']\" *ngIf=\"item.value['currentWeek']\"></fa-icon> Nädal {{item.key}}: {{ item.value['hours'] }}\r\n          </span>\r\n        </div>\r\n        <b>Tunde kokku: {{ this.table.totalHours }}</b>\r\n      </div>\r\n    </div>\r\n\r\n    <div  [@slideCompany]=\"this.company.slidePanel.newCompanyModal\" class=\"newCompanyModal d-lg-none\">\r\n      <div class=\"row\">\r\n        <div class=\"col-10 align-self-center\">\r\n          <h4>Uus Firma</h4>\r\n        </div>\r\n        <div class=\"col-2 align-self-center text-end\">\r\n          <h4>\r\n            <fa-icon [icon]=\"['fas','times']\" (click)=\"this.company.closeSidebar()\"></fa-icon>\r\n          </h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div [@slideLeft]=\"this.company.slidePanel.createCompany\" class=\"addCopmanyModal\">\r\n      <div class=\"wrap p-4\">\r\n        <div class=\"align-self-center\">\r\n          <h2>Firma Lisamine</h2>\r\n          <form>\r\n            <form  #f=\"ngForm\">\r\n              <div class=\"form-group\">\r\n                <small for=\"name\">Firma Nimi</small>\r\n                <input         \r\n                  ngModel\r\n                  #name=\"ngModel\" \r\n                  name=\"name\"\r\n                  type=\"text\" \r\n                  class=\"form-control\"  \r\n                  placeholder=\"\" \r\n                  ngbAutofocus \r\n                  required\r\n                >\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary btn-block\" (click)=\"this.company.createCompany(f)\" >Lisa</button><br>\r\n            </form>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div [@slideLeft]=\"this.company.slidePanel.addWorker\" class=\"addCopmanyModal\">\r\n      <div class=\"wrap p-4\">\r\n        <div class=\"align-self-center\">\r\n          <h2>Lisa Tööline</h2>\r\n          <form>\r\n            <form  #workerForm=\"ngForm\">\r\n              <div class=\"form-group\">\r\n                <small for=\"name\">E-mail või Kood</small>\r\n                <input         \r\n                  ngModel\r\n                  #name=\"ngModel\" \r\n                  name=\"code\"\r\n                  type=\"text\" \r\n                  class=\"form-control\" \r\n                  autofill=\"false\" \r\n                  placeholder=\"\" \r\n                  ngbAutofocus \r\n                  required\r\n                >\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary btn-block\" [disabled]=\"this.company.addWorkerLoading\" (click)=\"this.company.addWorker(workerForm)\" >\r\n                <fa-icon *ngIf=\"this.company.addWorkerLoading\" [icon]=\"['fas', 'circle-notch']\" [spin]=\"true\" class=\"align-self-center text-center w-100\"></fa-icon>\r\n                <span *ngIf=\"!this.company.addWorkerLoading\">Lisa</span>\r\n              </button><br>\r\n            </form>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div id=\"backDrop\" [@backDrop]=\"this.company.backDrop\" (click)=\"this.company.closeSidebar()\"></div>\r\n\r\n  </ng-template>\r\n  <ng-template #isNotAuth>\r\n      <app-login></app-login>\r\n  </ng-template>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CompanyService } from 'src/app/shared/services/company.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(\r\n    public company:CompanyService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.company.companyData.title = 'Töölaud';\r\n      this.company.companyData.id = '';\r\n    })\r\n\r\n  }\r\n\r\n}\r\n","<ng-template [ngIf]=\"this.company.myCompaniesLoading\" [ngIfElse]=\"loaded\">\r\n\t<div class=\"text-center p-5\">\r\n\t\t<fa-icon [icon]=\"['fas', 'circle-notch']\" [spin]=\"true\" class=\"align-self-center text-center w-100\"></fa-icon>\r\n\t</div>\r\n</ng-template>\r\n<ng-template #loaded>\r\n\t<ng-template [ngIf]=\" this.company.myCompanies.length == 1\" [ngIfElse]=\"more\">\r\n\t\tone\r\n\t</ng-template>\r\n\t<ng-template #more>\r\n\t\tmroe than one\r\n\t</ng-template>\r\n</ng-template>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { state, trigger, style, transition, animate } from '@angular/animations';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AppService } from 'src/app/shared/services/app.service';\nimport { HttpClient } from '@angular/common/http';\nimport { AlertService } from 'src/app/shared/services/alert.service';\nimport { CompanyService } from 'src/app/shared/services/company.service';\nimport { environment } from 'src/environments/environment';\nimport { NgbAccordion, NgbAccordionConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { MyCompaniesComponent } from './my-companies/my-companies.component';\n\n@Component({\n  selector: 'app-left-menu',\n  templateUrl: './left-menu.component.html',\n  styleUrls: ['./left-menu.component.scss'],\n})\nexport class LeftMenuComponent implements OnInit {\n  companyForm: FormGroup;\n  @ViewChild(MyCompaniesComponent) MyCompaniesComponent:MyCompaniesComponent;\n  constructor(\n    public service:AppService,\n    public http:HttpClient,\n    public alert:AlertService,\n    public company:CompanyService,\n  ) { }\n\n  ngOnInit(): void {\n    this.companyForm = new FormGroup({\n      companyName: new FormControl(),\n    });\n  }\n  closeAccordion(){\n    this.MyCompaniesComponent.accord.collapseAll()\n  }\n  \n}\n","<div class=\"menuWrap\">\n  <div class=\"top p-3\">\n    <h1 class=\"text-center\" routerLink=\"/\" (click)=\"closeAccordion()\">Tunnilehed</h1>\n  </div>\n  <div class=\"middle\">\n    <app-my-companies></app-my-companies>\n  </div>\n  <div class=\"bottom p-3\">\n    <button class=\"newCompany align-self-center\" (click)='this.company.openSidebar(\"createCompany\")'>\n      <fa-icon [icon]=\"['far', 'plus-square']\" class=\"mr-2\" ></fa-icon>\n      Lisa Firma\n    </button>\n  </div>\n</div>\n\n\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AppService } from 'src/app/shared/services/app.service';\nimport { HttpClient } from '@angular/common/http';\nimport { AlertService } from 'src/app/shared/services/alert.service';\nimport { CompanyService } from 'src/app/shared/services/company.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport { NgbDropdownConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { state, trigger, style, transition, animate } from '@angular/animations';\n\n\n@Component({\n  selector: 'app-my-companies',\n  templateUrl: './my-companies.component.html',\n  styleUrls: ['./my-companies.component.scss'],\n  animations: [\n    trigger('workers1', [\n      state('hide', style({\n          'height': 'initial',\n        })),\n      state('hide', \n        style({\n          'height': '0px',\n        })),\n      transition('show => hide', animate(150)),\n      transition('hide => show', animate(150))\n    ]),\n  ],\n})\nexport class MyCompaniesComponent implements OnInit {\n  @ViewChild('accord',{static:false}) accord;\n  \n  public workersMenu = {\n    workers1:'show'\n  }\n\n  constructor(\n    public company:CompanyService,\n    public dropdown: NgbDropdownConfig\n  ) {\n    dropdown.placement = 'bottom-right';\n  }\n\n  ngOnInit(): void {\n    this.company.getMyCompanies();\n  }\n\n\n\n\n\n}\n","<div class=\"companies d-flex\">\r\n  <ng-template [ngIf]=\"this.company.myCompaniesLoading\" [ngIfElse]=\"menuContent\">\r\n    <fa-icon [icon]=\"['fas', 'circle-notch']\" [spin]=\"true\" class=\"align-self-center text-center w-100\"></fa-icon>\r\n  </ng-template>\r\n  <ng-template #menuContent>\r\n    <ngb-accordion #accord=\"ngbAccordion\" [closeOthers]=\"true\" activeIds=\"static-1\">\r\n      <ngb-panel [id]=\"i\" routerLinkActive=\"active\" [attr.class]=\" item.id == this.company.companyData.id ? 'active' : null\" *ngFor=\"let item of this.company.myCompanies; let i=index\">\r\n        <ng-template ngbPanelTitle>\r\n            <div class=\"left\" routerLink=\"/firma/{{item.id}}\">\r\n              {{item.name}}\r\n            </div>\r\n        </ng-template>\r\n        <ng-template ngbPanelContent>\r\n          <div class=\"workers\" [@workers]=\"workersMenu.workers1\">\r\n            <ul>\r\n              <li>\r\n                <fa-icon [icon]=\"['fas', 'user']\" class=\"mr-2\"></fa-icon>\r\n                <span>Kasutaja 1</span>\r\n              </li>\r\n              <li>\r\n                <fa-icon [icon]=\"['fas', 'user']\" class=\"mr-2\"></fa-icon>\r\n                <span>Kasutaja 1</span>\r\n              </li>\r\n              <li>\r\n                <fa-icon [icon]=\"['fas', 'user']\" class=\"mr-2\"></fa-icon>\r\n                <span>Kasutaja 1</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </ng-template>\r\n      </ngb-panel>\r\n    </ngb-accordion>\r\n    <!-- \r\n    <ul>\r\n      <li ngbDropdown routerLinkActive=\"active\" [attr.class]=\" item.id == this.company.companyData.id ? 'active' : null\" *ngFor=\"let item of this.company.myCompanies; let i=index\" >\r\n        <div class=\"company\" >\r\n          <div class=\"left\" routerLink=\"/firma/{{item.id}}\">\r\n            {{item.name}}\r\n          </div>\r\n          <div class=\"right\">\r\n            <fa-icon class=\"text-right\" [icon]=\"['fas', 'ellipsis-v']\" ngbDropdownToggle></fa-icon>\r\n          </div>\r\n          <div class=\"dropdown-menu\" container=\"body\" placement=\"top\" ngbDropdownMenu>\r\n            <button  ngbDropdownItem (click)='\r\n            this.company.openAddWorkerPanel(\"addWorker\");\r\n            this.company.setCompanyId(item.id)\r\n            '> \r\n              <span class=\"icon\">\r\n                <fa-icon class=\"text-right\" [icon]=\"['fas', 'user-plus']\" ></fa-icon> \r\n              </span>\r\n              Lisa Tööline\r\n            </button>\r\n            <button ngbDropdownItem routerLink=\"/firma/{{item.id}}/seaded\"> \r\n              <span class=\"icon\">\r\n                <fa-icon class=\"text-right\" [icon]=\"['fas', 'cogs']\" ></fa-icon> \r\n              </span>\r\n              Seaded\r\n            </button>\r\n            <button (click)=\"company.removeCompany(i)\" ngbDropdownItem>\r\n              <span class=\"icon\">\r\n                <fa-icon class=\"text-right\" [icon]=\"['fas', 'trash']\" ></fa-icon> \r\n              </span>\r\n              Remove\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {{workersMenu.workers1}}\r\n        <div class=\"workers\" [@workers]=\"workersMenu.workers1\">\r\n          <ul>\r\n            <li>\r\n              <fa-icon [icon]=\"['fas', 'user']\" class=\"mr-2\"></fa-icon>\r\n              <span>Kasutaja 1</span>\r\n            </li>\r\n            <li>\r\n              <fa-icon [icon]=\"['fas', 'user']\" class=\"mr-2\"></fa-icon>\r\n              <span>Kasutaja 1</span>\r\n            </li>\r\n            <li>\r\n              <fa-icon [icon]=\"['fas', 'user']\" class=\"mr-2\"></fa-icon>\r\n              <span>Kasutaja 1</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n      </li>\r\n    </ul>\r\n  -->\r\n  </ng-template>\r\n</div>\r\n\r\n","import { Injectable, PLATFORM_ID, Inject } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { isPlatformBrowser, isPlatformServer  } from '@angular/common';\r\nimport { AppService } from '../services/app.service';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\tconstructor(\r\n\t\tpublic router:Router,\r\n\t\t@Inject(PLATFORM_ID) public platformId: Object,\r\n\t\tpublic auth:AuthService,\r\n\t\tpublic service:AppService,\r\n\t\tpublic app:AppService,\r\n\t){\r\n\r\n\t}\r\n\r\n\r\n\tcanActivate(\r\n\t\tnext: ActivatedRouteSnapshot,\r\n    \tstate: RouterStateSnapshot): Observable<any>{\r\n\t\t\t\treturn this.auth.getAuth().pipe(\r\n\t\t\t\t\tmap(\r\n\t\t\t\t\t\t(data)=>{\r\n\t\t\t\t\t\t\tif(!data){\r\n\t\t\t\t\t\t\t\tthis.auth.isAuthenticated =false\r\n\t\t\t\t\t\t\t\treturn true\r\n\t\t\t\t\t\t\t}else{\r\n\t\r\n\t\t\t\t\t\t\t\tthis.auth.isAuthenticated =true\r\n\t\t\t\t\t\t\t\tthis.auth.userData = data;\r\n\t\t\t\t\t\t\t\treturn true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(error)=>{\r\n\t\t\t\t\t\t\tthis.auth.isAuthenticated =false\r\n\t\t\t\t\t\t\treturn false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\r\n\r\n\t\t}\r\n}\r\n\r\n","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, ActivatedRoute } from \"@angular/router\";\r\nimport {PLATFORM_ID, Inject} from '@angular/core';\r\nimport { Observable } from \"rxjs\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { TransferState, makeStateKey } from '@angular/platform-browser';\r\nimport { map, tap } from \"rxjs/operators\";\r\nimport { isPlatformBrowser, isPlatformServer  } from '@angular/common';\r\nimport { TableService } from \"../services/table.service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { AppService } from \"../services/app.service\";\r\nimport { CompanyService } from \"../services/company.service\";\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class MenuResolver implements Resolve<object>{\r\n    public data:any;\r\n    constructor( \r\n      public table:TableService,\r\n      @Inject(PLATFORM_ID) private platformId: Object,\r\n      public http:HttpClient,\r\n      public route:ActivatedRoute,\r\n      public router:Router,\r\n      public service:AppService,\r\n      public company:CompanyService,\r\n    ){ }\r\n\r\n    resolve(\r\n      route: ActivatedRouteSnapshot, \r\n      state: RouterStateSnapshot\r\n    ): Observable<object> | Promise<object> | object {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n          //this.table.generateCalendarArray()\r\n          if( this.company.myCompanies.length == 0){\r\n            return  this.http.get(environment.apiUrl+'/tootable/company/my-companies', {withCredentials: true}).pipe(\r\n              map(\r\n                (res)=>{\r\n                  var data:any = res;\r\n                  for( let company of data ){\r\n                    this.company.myCompanies.push(company)\r\n                  }\r\n                  this.company.myCompaniesLoading = false;\r\n                  /*\r\n                  if( this.company.myCompanies.length == 1){\r\n                    this.router.navigate(['/firma/'+this.company.myCompanies[0].id]); \r\n                  }\r\n                  */\r\n                },\r\n                (error)=>{\r\n                }\r\n              )//end map\r\n            )//enbd pipe\r\n          }\r\n        }//endif\r\n    }//end of resolve\r\n}//end of class"],"sourceRoot":"webpack:///"}